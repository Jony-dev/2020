AWSTemplateFormatVersion: "2010-09-09"
Description: "Create CodeBuild project with required IAM/SG/SSM/CW Logs configuration and S3/DynamoDB for Terraform"
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Top-level environment configuration"
        Parameters:
          - ProjectName
          - Environment
      -
        Label:
          default: "VPC configuration for CodeBuild"
        Parameters:
          - VpcID
          - PrivateSubnetIDs
      -
        Label:
          default: "IAM configuration"
        Parameters:
          - IAMCodeBuildPoliciesARNs
      -
        Label:
          default: "Git repository configuration (e.g. Bitbucket)"
        Parameters:
          - ConfigRepoURL
          - GitSSHPrivateKey
          - GitBranch
          - DeploymentDirPath

Parameters:
  ProjectName:
    Description: String that will be used as basis for naming S3 bucket, CB project, etc.
    Type: String
    Default: aws-challenge
  Environment:
    Description: Environmnet type from dev, int, prod
    Type: String
    Default: 'dev'
  VpcID:
    Type: AWS::EC2::VPC::Id
    Description: VPC in which CB project will run
  PrivateSubnetIDs:
    Type: List<AWS::EC2::Subnet::Id>
    Description: List of subnets in which CB will run (only private are supported)
  IAMCodeBuildPoliciesARNs:
    Description: List of IAM policy ARNs to be attached to CodeBuild role (comma separated string, no spaces)
    Default: 'arn:aws:iam::aws:policy/AdministratorAccess'
    Type: String
  ConfigRepoURL:
    Description: (Optional)Full ssh URL to configuration repository (starting with ssh://)
    Type: String
    Default: 'ssh://git@github.com:Jony-dev/Test.git'
  GitSSHPrivateKey:
    NoEcho: 'true'
    Description: Private SSH key to access repositories (read-only is sufficient)
    Type: String
  GitBranch:
    Description: Git branch of config repo to deploy
    Type: String
    Default: master
  DeploymentDirPath:
    Description: List of ordered space separated Paths in repository to run terraform at
    Type: String
    Default: "infrastructure"
  TerraformVersion:
    Description: Terraform version
    Type: String
    Default: '0.12.24'


  # WHAT WE ARE GOING TO NEED
  # 1 CODEBUILD PROJECT
  # 2 ROLE - SO CODEBUILD CAN ACCESS RESOURCES
  # 3 BUCKET FOR TF STATE
  # 4 DYNIMO FOR SAVING CONFIGURATIONS
  # DAPF USES BITBUCKET ? INCLUDE A REPO ?

Resources:
  ####################################
  # PARAMETERS IN SSM PARAMETER STORE:
  ####################################

  
  ####################################
  # IAM:
  ####################################
  AdminRole :
    Type : AWS::IAM::Role
    Properties :
      RoleName : TestAdminRole
      ManagedPolicyArns : 
      - !Ref IAMCodeBuildPoliciesARNs
      AssumeRolePolicyDocument :
        Version : "2012-10-17"
        Statement : 
          Effect : Allow
          Principal:
            Service : 
              - codebuild.amazonaws.com
          Action : sts:AssumeRole
      Tags: 
      - Key : environment
        Value : !Ref Environment

  ####################################
  # VPC resources:
  ####################################
  SG:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: "Security group for VPC"
      GroupName: "vpcSG"
      Tags: 
        - Key : environment
          Value : !Ref Environment
      VpcId: !Ref VpcID

  ####################################
  # CloudWatch Logs
  ####################################
  

  ####################################
  # CodeBuild:
  ####################################
  TestCodeBuildProject :
    Type : AWS::CodeBuild::Project
    Properties :
      Tags: 
      - Key : environment
        Value : !Ref Environment 
      Name: "TestCodebuild"
      VpcConfig: 
        VpcId: !Ref VpcID
        Subnets : !Ref PrivateSubnetIDs
        SecurityGroupIds :
          - !Ref SG
      ServiceRole: !Ref AdminRole 
      Artifacts :
        Type : no_artifacts
      
      Environment: 
        Type : "LINUX_CONTAINER"
        ComputeType: "BUILD_GENERAL1_SMALL"
        Image : "aws/codebuild/amazonlinux2-x86_64-standard:2.0"
        EnvironmentVariables :
          - Name : "applicationName"
            Type : "PLAINTEXT"
            Value : "TestCodeBuildApplication"
          - Name : "Region"
            Type : "PLAINTEXT"
            Value : !Sub "${AWS::Region}" 
      Source :
        Type: "NO_SOURCE" 
        BuildSpec: !Sub |
          version: 0.2
          phases:
            install:
              commands:
                echo "Install part"
            build:
              commands:
                echo "Build Part"
            post_build:
              commands:
                - echo "Nothing to do in the post_build for now"

  
  ####################################
  # Terraform state:
  ####################################
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "testbucket-${AWS::Region}"
      AccessControl: Private
      Tags:
        - Key: Name
          Value: TFstateBucket

####################################
# PARAMETERS IN SSM PARAMETER STORE:
####################################


####################################
# OUTPUTS:
####################################
# Outputs:
#   CodeBuildURL:
#     Description: URL to CodeBuild project that will run Terraform
#     Value: !Sub "https://${AWS::Region}.console.aws.amazon.com/codesuite/codebuild/projects/${TestCodeBuildProject}"