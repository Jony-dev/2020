AWSTemplateFormatVersion: '2020-11-13'
Description: "Create CodeBuild project with required IAM/SG/SSM/CW Logs configuration and S3/DynamoDB for Terraform"
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Top-level environment configuration"
        Parameters:
          - ProjectName
          - Environment
      -
        Label:
          default: "VPC configuration for CodeBuild"
        Parameters:
          - VpcID
          - PrivateSubnetIDs
      -
        Label:
          default: "IAM configuration"
        Parameters:
          - IAMCodeBuildPoliciesARNs
      -
        Label:
          default: "Git repository configuration (e.g. Bitbucket)"
        Parameters:
          - ConfigRepoURL
          - GitSSHPrivateKey
          - GitBranch
          - DeploymentDirPath

Parameters:
  ProjectName:
    Description: String that will be used as basis for naming S3 bucket, CB project, etc.
    Type: String
    Default: aws-challenge
  Environment:
    Description: Environmnet type from dev, int, prod
    Type: String
    Default: 'dev'
  VpcID:
    Type: AWS::EC2::VPC::Id
    Description: VPC in which CB project will run
  PrivateSubnetIDs:
    Type: List<AWS::EC2::Subnet::Id>
    Description: List of subnets in which CB will run (only private are supported)
  IAMCodeBuildPoliciesARNs:
    Description: List of IAM policy ARNs to be attached to CodeBuild role (comma separated string, no spaces)
    Default: 'arn:aws:iam::aws:policy/AdministratorAccess'
    Type: String
  ConfigRepoURL:
    Description: (Optional)Full ssh URL to configuration repository (starting with ssh://)
    Type: String
    Default: 'somerepo.github.com'
  GitSSHPrivateKey:
    NoEcho: 'true'
    Description: Private SSH key to access repositories (read-only is sufficient)
    Type: String
  GitBranch:
    Description: Git branch of config repo to deploy
    Type: String
    Default: master
  DeploymentDirPath:
    Description: List of ordered space separated Paths in repository to run terraform at
    Type: String
    Default: "infrastructure assets"
  TerraformVersion:
    Description: Terraform version
    Type: String
    Default: '0.12.24'


  # WHAT WE ARE GOING TO NEED
  # 1 CODEBUILD PROJECT
  # 2 ROLE - SO CODEBUILD CAN ACCESS RESOURCES
  # 3 BUCKET FOR TF STATE
  # 4 DYNIMO FOR SAVING CONFIGURATIONS
  # DAPF USES BITBUCKET ? INCLUDE A REPO ?

Resources:
  ####################################
  # PARAMETERS IN SSM PARAMETER STORE:
  ####################################

  
  ####################################
  # IAM:
  ####################################
  AdminRole :
    Type : AWS::IAM::Role
    Properties :
      RoleName : TestAdminRole
      AssumeRolePolicyDocument :
        Version : 25/01/2021
        Statement : 
          Effect : Allow
          Principle : 
              Service : 
              - codebuild.amazonaws.com
          Action : sts:AssumeRole
      Policies:
      - PolicyName: adminMode
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: '*'
              Resource: '*'

  ####################################
  # VPC resources:
  ####################################
  


  ####################################
  # CloudWatch Logs
  ####################################
  

  ####################################
  # CodeBuild:
  ####################################
  TestCodeBuildProject :
    Type : AWS::CodeBuild::Project
    Properties : 
      Name: TestCodebuild
      Artifacts :
        Type : no_artifacts
      Environment : 
        Type : LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image : aws/codebuild/amazonlinux2-x86_64-standard:2.0
        EnvironmentVariables :
          - Name : applicationName
            Type : String
            Value : TestCodeBuildApplication
          - Name : Region
            Type : String
            Value : !Ref AWS::Region 
        Source : 
          Type: NO_SOURCE
        BuildSpec: !Sub |
          version: 0.2
          phases:
            install:
              commands:
                - sudo pip install boto3
                - wget https://releases.hashicorp.com/terraform/0.10.4/terraform_0.10.4_linux_amd64.zip
                - unzip terraform_0.10.4_linux_amd64.zip
                - sudo mv terraform /bin
                - rm terraform_0.10.4_linux_amd64.zip
                - apt-get update
                - apt-cache search source
                - apt-get install -y curl jq
                - curl 169.254.170.2$AWS_CONTAINER_CREDENTIALS_RELATIVE_URI | jq 'to_entries | [ .[] | select(.key | (contains("Expiration") or contains("RoleArn"))  | not) ] |  map(if .key == "AccessKeyId" then . + {"key":"AWS_ACCESS_KEY_ID"} else . end) | map(if .key == "SecretAccessKey" then . + {"key":"AWS_SECRET_ACCESS_KEY"} else . end) | map(if .key == "Token" then . + {"key":"AWS_SESSION_TOKEN"} else . end) | map("export \(.key)=\(.value)") | .[]' -r > /tmp/aws_cred_export.txt # work around https://github.com/hashicorp/terraform/issues/8746
                - echo "Prepare terraform file"
                - cd /bin
                - touch backend.tf
                - echo "terraform { " >> backend.tf
                - echo "   backend \"s3\" { " >> backend.tf
                - echo "   bucket = \"Bucket.terraform-state\"" >> backend.tf
                - echo "   key    = \"$applicationName/terraform.tfstate\"" >> backend.tf
                - echo "   region = \"$Region\"" >> backend.tf
                - echo "  }" >> backend.tf
                - echo "}" >> backend.tf
                - cat backend.tf
                - . /tmp/aws_cred_export.txt && terraform init
            build:
              commands:
                - . /tmp/aws_cred_export.txt &&  python runterraform.js.py $region $applicationname $destroy
                - echo "Post apply build"
            post_build:
              commands:
                - echo "Nothing to do in the post_build for now"

  
  ####################################
  # Terraform state:
  ####################################
  AwsBucket:
    Type: AWS::S3::Bucket
    Properties: 
      AccessControl: Private | PublicRead | PublicReadWrite | AuthenticatedRead | LogDeliveryWrite | BucketOwnerRead | BucketOwnerFullControl
      BucketName: Bucket_terraform-state
      CorsConfiguration: 
      LifecycleConfiguration: 
      NotificationConfiguration: 
      VersioningConfiguration: 
      WebsiteConfiguration: 
      Tags:
        - Key: Name
          Value: TFstateBucket

####################################
# PARAMETERS IN SSM PARAMETER STORE:
####################################


####################################
# OUTPUTS:
####################################
Outputs:
  CodeBuildURL:
    Description: URL to CodeBuild project that will run Terraform
    Value: !Sub "https://${AWS::Region}.console.aws.amazon.com/codesuite/codebuild/projects/${CodeBuildProject}"